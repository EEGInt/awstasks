<project name="awstasks-examples" basedir=".">

 <!-- PROPERTIES -->

 <property name="awstasks.classes" value="${basedir}/build/classes"/>
 <property name="awstasks.lib"     value="${basedir}/lib"/>
	 
 <property name="examples.credentials" value="../../dist/aws.properties" />
 <property name="examples.bucket"      value="provantage-development"    />
 <property name="examples.bucket.2"    value="awstasks-ts"               />
 <property name="examples.dir"         value="${basedir}/runtime"        />

 <property file="${examples.credentials}" />

 <path id="classpath.compile" >
  <fileset dir="${awstasks.lib}" />
  <pathelement location="${awstasks.classes}" />
 </path>

 <taskdef name="s3-list" classname="dak.ant.taskdefs.S3List">
  <classpath refid="classpath.compile"/>
 </taskdef>

 <taskdef name="s3-copy" classname="dak.ant.taskdefs.S3Copy">
  <classpath refid="classpath.compile"/>
 </taskdef>

 <taskdef name="s3-upload" classname="dak.ant.taskdefs.S3Upload">
  <classpath refid="classpath.compile"/>
 </taskdef>
	
 <taskdef name="s3-download" classname="dak.ant.taskdefs.S3Download">
  <classpath refid="classpath.compile"/>
 </taskdef>

 <taskdef name="s3-synchronize" classname="dak.ant.taskdefs.S3Synchronize">
  <classpath refid="classpath.compile" />
 </taskdef>
	
 <taskdef name="s3-delete" classname="dak.ant.taskdefs.S3Delete">
  <classpath refid="classpath.compile"/>
 </taskdef>
	
 <typedef name="S3Fileset" classname="dak.ant.types.S3FileSetX">
  <classpath refid="classpath.compile"/>
 </typedef>

 <typedef name="S3File" classname="dak.ant.types.S3File">
  <classpath refid="classpath.compile"/>
 </typedef>

 <typedef name="key" classname="dak.ant.selectors.S3KeySelector">
  <classpath refid="classpath.compile"/>
 </typedef>
			
 <typedef name="objectset" classname="dak.ant.types.S3ObjectSet">
  <classpath refid="classpath.compile"/>
 </typedef>
	
 <typedef name="object" classname="dak.ant.types.S3ObjectWrapper">
  <classpath refid="classpath.compile"/>
 </typedef>
	
  <!-- NOTE: using an objectset with a refid requires the classes to be in the Ant path/home. 
             For seemingly obscure reasons (probably http://ant.apache.org/faq.html#delegating-classloader-1.6) 
             a typedef does not work.
   -->

 <objectset bucket="${examples.bucket}" id="configuration-files">
  <object key="development.conf" />
 </objectset>
	
 <!-- LIST -->
		
 <target name="list-fileset-date">
  <s3-list accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true" outfile="${examples.dir}/list.txt" format="[%s][%s]" append="false">
   <s3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <date when="before" datetime="2011-03-01" pattern="yyyy-MM-dd" />
   </s3fileset>
  </s3-list>
 </target>

 <target name="list-fileset-regex-1.7">
  <s3-list accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true">
   <s3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <key regex="org"  caseSensitive="true" />
   </s3fileset>
  </s3-list>
 </target>
	
 <target name="list-fileset-regex-1.8">
  <fail message="A filename selector with regex attribute requires Ant 1.8 or higher">
   <condition>
 	<not>
 	 <contains string="${ant.version}" substring="1.8"/>
 	</not>
   </condition>
  </fail>

  <s3-list accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true">
   <s3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <filename regex="org" />
   </s3fileset>
  </s3-list>
 	
 </target>
	
 <!-- COPY -->
	
 <target name="copy-fileset">
  <s3-copy accessId="${aws.accessId}" secretKey="${aws.secretKey}" bucket="${examples.bucket.2}" verbose="true">
   <s3fileset bucket="provantage-development" includes="**/*.jar" >
    <date when="before" datetime="2011-03-01" pattern="yyyy-MM-dd" />
   </s3fileset>
  </s3-copy>
 </target>

 <target name="copy-fileset-date">
  <s3-copy accessId="${aws.accessId}" secretKey="${aws.secretKey}" bucket="${examples.bucket.2}" dummyRun="true" verbose="true">
   <s3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <date when="before" datetime="2011-03-01" pattern="yyyy-MM-dd" />
   </s3fileset>
  </s3-copy>
 </target>

 <target name="copy-fileset-regex-1.7">
  <s3-copy accessId="${aws.accessId}" secretKey="${aws.secretKey}" bucket="${examples.bucket.2}" dummyRun="true" verbose="true">
   <s3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <key regex="org" />
   </s3fileset>
  </s3-copy>
 </target>

 <target name="copy-fileset-regex-1.8">
  <fail message="A filename selector with regex attribute requires Ant 1.8 or higher">
   <condition>
 	<not>
 	 <contains string="${ant.version}" substring="1.8"/>
 	</not>
   </condition>
  </fail>

 <s3-copy accessId="${aws.accessId}" secretKey="${aws.secretKey}" bucket="${examples.bucket.2}" dummyRun="true" verbose="true">
   <s3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <filename regex="org" />
   </s3fileset>
  </s3-copy>
 </target>
	
 <!-- UPLOAD -->

 <target name="upload-new-or-changed">
  <s3-upload verbose="true" 
  	         accessId="${aws.accessId}" 
  	         secretKey="${aws.secretKey}"
  	         bucket="${examples.bucket}"
  	         upload="new,changed">
   <fileset dir="${examples.dir}/upload" includes="**/*" excludes="**/.DSStore" />
  </s3-upload>
 </target>
	
 <!-- DOWNLOAD -->

 <target name="download-all">
  <s3-download verbose="true"
	           accessId="${aws.accessId}"
               secretKey="${aws.secretKey}"
               dir="${examples.dir}/download/all"
               download="new,changed">
  	<objectset bucket="${examples.bucket}" />
  </s3-download>
 </target>
		
 <target name="download-includes">
  <s3-download verbose="true"
               accessId="${aws.accessId}"
               secretKey="${aws.secretKey}"
               dir="${examples.dir}/download/includes"
               download="new,changed">
   <objectset bucket="${examples.bucket}" includes="**/*.jar" />
  </s3-download>
 </target>

 <target name="download-excludes">
  <s3-download verbose="true"
  	           accessId="${aws.accessId}"
	           secretKey="${aws.secretKey}"
	           dir="${examples.dir}/download/excludes"
               download="new,changed">
   <objectset bucket="${examples.bucket}" excludes="**/*.jar" />
  </s3-download>
 </target>

 <target name="download-list">
  <s3-download verbose="true"
	  	       accessId="${aws.accessId}"
		       secretKey="${aws.secretKey}"
               dir="${examples.dir}/download/list">
   <objectset bucket="${examples.bucket}">
   	<object key="development.ecf" />
   </objectset>
  </s3-download>
 </target>
	
 <target name="download-refid">
  <s3-download verbose="true"
	  	       accessId="${aws.accessId}"
  	           secretKey="${aws.secretKey}"
	           dir="${examples.dir}/download/refid">
   <objectset refid="configuration-files" />
  </s3-download>
 </target>
	
 <!-- SYNCHRONIZE -->

 <target name="synchronize-upload">
  <s3-synchronize accessId="${aws.accessId}" 
  	              secretKey="${aws.secretKey}" 
  	              bucket="${examples.bucket}"
  	              direction="upload"
 	              delete="false"
 	              revert="false"
                  includeDirectories="true"
  	              noAction="false"
  	              verbose="true" >
   <fileset dir="${examples.dir}/synchronize" includes="**/*" excludes="**/.DSStore" />
  </s3-synchronize>
 </target>

 <target name="synchronize-download">
  <s3-synchronize accessId="${aws.accessId}" 
  	              secretKey="${aws.secretKey}" 
  	              bucket="${examples.bucket}"
  	              direction="download"
 	              delete="false"
 	              revert="false"
                  includeDirectories="true"
  	              noAction="false"
  	              verbose="true" >
   <fileset dir="${examples.dir}/synchronize" includes="**/*" excludes="**/.DSStore" />
  </s3-synchronize>
 </target>

 <!-- DELETE -->

 <target name="delete-fileset">
  <s3-delete accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true" prefix="" >
   <s3fileset bucket="${examples.bucket}" includes="**/*.bak" />
  </s3-delete>
 </target>
		
 <target name="delete-regex">
  <s3-delete accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true" bucket="${examples.bucket}" prefix="" fileregex="test.*">
   <s3fileset bucket="provantage-development" includes="**/*.jar">
    <key regex="test.*" casesensitive="true" />
   </s3fileset> 	
  </s3-delete>
 </target>

	
</project>
